"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[64],{5734:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new UID generator instance","params":[{"name":"seed","desc":"Optional seed for the randomizer. Must be in range [-9007199254740991, 9007199254740991].","lua_type":"number?"}],"returns":[{"desc":"A new UID generator instance.","lua_type":"UID"}],"function_type":"static","source":{"line":25,"path":"src/init.luau"}},{"name":"isbase","desc":"Validates a UID against a specified base format","params":[{"name":"uid","desc":"The UID to validate.","lua_type":"string"},{"name":"uidBase","desc":"The base format to validate against.","lua_type":"UIDBase"}],"returns":[{"desc":"Whether the UID matches the specified base format.","lua_type":"boolean"}],"function_type":"static","source":{"line":44,"path":"src/init.luau"}},{"name":"guid","desc":"Generates a new GUID string","params":[],"returns":[{"desc":"A GUID string. Uniqueness is 2^128 possibilities (128-bit).","lua_type":"string"}],"function_type":"static","source":{"line":71,"path":"src/init.luau"}},{"name":"NextBase256ASCII","desc":"Generates a new Base256ASCII string\\n:::tip\\nWe recommend using this UIDs for internal script usage and instance attributes.\\n:::\\n:::danger\\nYou may facing UIDs information loss for specific use cases. like datastore, middlewares remote transmission, and more.\\n:::","params":[{"name":"length","desc":"The length of the UID. Uniqueness is (256 ^ length) possibilities.","lua_type":"number"}],"returns":[{"desc":"A random Base256ASCII string.","lua_type":"string"}],"function_type":"method","source":{"line":112,"path":"src/init.luau"}},{"name":"NextBase94JSONSAFE","desc":"Generates a new Base94JSONSAFE string\\n:::tip\\nWe recommend this UIDs for datastore related. as if zero-overhead and compact.\\n:::","params":[{"name":"length","desc":"The length of the UID. Uniqueness is (94 ^ length) possibilities.","lua_type":"number"}],"returns":[{"desc":"A random Base94JSONSAFE string.","lua_type":"string"}],"function_type":"method","source":{"line":229,"path":"src/init.luau"}},{"name":"NextBase64URL","desc":"Generates a new Base64URL string\\n:::tip\\nWe recommend using this UIDs for human-friendly writing. like coupon/redeem codes, short urls, and more.\\n:::","params":[{"name":"length","desc":"The length of the UID. Uniqueness is (64 ^ length) possibilities.","lua_type":"number"}],"returns":[{"desc":"A random Base64URL string.","lua_type":"string"}],"function_type":"method","source":{"line":321,"path":"src/init.luau"}},{"name":"NextHex","desc":"Generates a new Hex string\\n:::note\\nWe recommend using this UIDs for general usage. but you may consider using other UIDs for specific use cases.\\nand better compactness.\\n:::","params":[{"name":"length","desc":"The length of the UID. Uniqueness is (16 ^ length) possibilities.","lua_type":"number"}],"returns":[{"desc":"A random Hex string.","lua_type":"string"}],"function_type":"method","source":{"line":395,"path":"src/init.luau"}},{"name":"Clone","desc":"Clones the UID object","params":[],"returns":[{"desc":"A new UID object with the same state as the original.","lua_type":"UID"}],"function_type":"method","source":{"line":406,"path":"src/init.luau"}}],"properties":[],"types":[{"name":"UIDBase","desc":"Supported UID base formats","lua_type":"\\"Base256ASCII\\" | \\"Base94JSONSAFE\\" | \\"Base64URL\\" | \\"Hex\\" | \\"GUID\\"","source":{"line":35,"path":"src/init.luau"}}],"name":"UID","desc":"An uid generator to represent an uniqueness for Roblox","source":{"line":16,"path":"src/init.luau"}}')}}]);